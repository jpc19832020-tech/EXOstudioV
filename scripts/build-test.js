const { execSync } = require('child_process');
const fs = require('fs');
const path = require('path');

console.log('üß™ Iniciando test de build...');

try {
  // Limpiar builds anteriores
  console.log('üßπ Limpiando builds anteriores...');
  if (fs.existsSync('.next')) {
    fs.rmSync('.next', { recursive: true });
  }
  if (fs.existsSync('out')) {
    fs.rmSync('out', { recursive: true });
  }

  // Ejecutar build
  console.log('üî® Ejecutando npm run build...');
  execSync('npm run build', { stdio: 'inherit' });

  // Verificar salida
  console.log('üìã Verificando salida del build...');
  
  if (fs.existsSync('out')) {
    console.log('‚úÖ Directorio out creado');
    
    // Listar archivos importantes
    const importantFiles = [
      'out/index.html',
      'out/productos/index.html',
      'out/.nojekyll'
    ];

    importantFiles.forEach(file => {
      if (fs.existsSync(file)) {
        console.log(`‚úÖ ${file} existe`);
      } else {
        console.log(`‚ùå ${file} no existe`);
      }
    });

    // Contar p√°ginas de productos
    if (fs.existsSync('out/productos/p')) {
      const productPages = fs.readdirSync('out/productos/p', { withFileTypes: true })
        .filter(dirent => dirent.isDirectory())
        .map(dirent => dirent.name);
      
      console.log(`üì¶ P√°ginas de detalle encontradas: ${productPages.length}`);
      productPages.forEach(page => {
        const indexPath = `out/productos/p/${page}/index.html`;
        if (fs.existsSync(indexPath)) {
          console.log(`  ‚úÖ ${page}/index.html`);
        } else {
          console.log(`  ‚ùå ${page}/index.html no encontrado`);
        }
      });
    }

    // Verificar contenido del index principal
    try {
      const indexContent = fs.readFileSync('out/index.html', 'utf8');
      if (indexContent.includes('EXOstudioV')) {
        console.log('‚úÖ Index.html contiene basePath correcto');
      } else {
        console.log('‚ö†Ô∏è Index.html puede no tener el basePath correcto');
      }
    } catch (error) {
      console.log('‚ùå Error leyendo index.html');
    }

  } else {
    console.log('‚ùå No se cre√≥ el directorio out');
  }

  console.log('‚úÖ Test de build completado');

} catch (error) {
  console.error('‚ùå Error en el test de build:', error.message);
  process.exit(1);
}